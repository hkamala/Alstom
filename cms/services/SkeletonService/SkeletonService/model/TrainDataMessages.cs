// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TrainDataMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TrainData {

  /// <summary>Holder for reflection information generated from TrainDataMessages.proto</summary>
  public static partial class TrainDataMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for TrainDataMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrainDataMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdUcmFpbkRhdGFNZXNzYWdlcy5wcm90bxIJVHJhaW5EYXRhIv0BCghQcm9w",
            "ZXJ0eRIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJEi8KBHR5cGUYAyAB",
            "KA4yIS5UcmFpbkRhdGEuUHJvcGVydHkuRVByb3BlcnR5VHlwZRINCgV2YWxp",
            "ZBgEIAEoCCKTAQoNRVByb3BlcnR5VHlwZRILCgdVTktOT1dOEAASEQoNVE1T",
            "X1RUX09CSkVDVBABEhMKD1RNU19UUklQX09CSkVDVBACEgsKB0lOVEVHRVIQ",
            "AxILCgdCT09MRUFOEAQSCgoGU1RSSU5HEAUSCAoEUkVBTBAGEg4KCkJJVF9W",
            "RUNUT1IQBxINCglUSU1FU1RBTVAQCCLvAQoSTW92ZW1lbnRDb250cm9sbGVy",
            "EksKE21vdmVtZW50X2NvbnRyb2xsZXIYASABKA4yLi5UcmFpbkRhdGEuTW92",
            "ZW1lbnRDb250cm9sbGVyLkVNb3ZlbWVudENvbnRyb2wSHAoUY2FuX2NvbnRy",
            "b2xfbW92ZW1lbnQYAiABKAgSGgoSbW92ZW1lbnRfYWdyZWVtZW50GAMgASgN",
            "Eg4KBnNlbmRlchgEIAEoCRINCgVvd25lchgFIAEoCSIzChBFTW92ZW1lbnRD",
            "b250cm9sEgcKA1REUxAAEggKBENCVEMQARIMCghFWFRFUk5BTBACIscDCg1U",
            "cmFpblBvc2l0aW9uEjwKCWZvb3RwcmludBgBIAEoCzIpLlRyYWluRGF0YS5U",
            "cmFpblBvc2l0aW9uLkVsZW1lbnRFeHRlbnNpb24SRAoRdmlydHVhbF9vY2N1",
            "cGFuY3kYAiABKAsyKS5UcmFpbkRhdGEuVHJhaW5Qb3NpdGlvbi5FbGVtZW50",
            "RXh0ZW5zaW9uEj4KC3Byb3BhZ2F0aW9uGAMgASgLMikuVHJhaW5EYXRhLlRy",
            "YWluUG9zaXRpb24uRWxlbWVudEV4dGVuc2lvbhrxAQoQRWxlbWVudEV4dGVu",
            "c2lvbhIWCg5zdGFydF9kaXN0YW5jZRgBIAEoDRIUCgxlbmRfZGlzdGFuY2UY",
            "AiABKA0SLgoPc3RhcnRfZGlyZWN0aW9uGAMgASgOMhUuVHJhaW5EYXRhLkVE",
            "aXJlY3Rpb24SLAoNZW5kX2RpcmVjdGlvbhgEIAEoDjIVLlRyYWluRGF0YS5F",
            "RGlyZWN0aW9uEg8KB2VsZW1lbnQYBSADKA0SGQoRdmFsaWRfb2JqZWN0X3R5",
            "cGUYBiADKA0SEAoIbW9kaWZpZWQYByABKAgSEwoLZWxlbWVudF9zdHIYCCAD",
            "KAki2BgKFERlc2NyaWJlcldpdGhDb25zaXN0EkAKBmFjdGlvbhgBIAEoDjIw",
            "LlRyYWluRGF0YS5EZXNjcmliZXJXaXRoQ29uc2lzdC5FRGVzY3JpYmVyQWN0",
            "aW9uEjwKCWRlc2NyaWJlchgCIAEoCzIpLlRyYWluRGF0YS5EZXNjcmliZXJX",
            "aXRoQ29uc2lzdC5EZXNjcmliZXISQwoNdHJhaW5fY29uc2lzdBgDIAEoCzIs",
            "LlRyYWluRGF0YS5EZXNjcmliZXJXaXRoQ29uc2lzdC5UcmFpbkNvbnNpc3QS",
            "UwoTZHluYW1pY190aW1pbmdfaW5mbxgEIAEoCzI2LlRyYWluRGF0YS5EZXNj",
            "cmliZXJXaXRoQ29uc2lzdC5UcmFpbkR5bmFtaWNUaW1pbmdJbmZvGvoMCglE",
            "ZXNjcmliZXISPgoFdHJhaW4YASABKAsyLy5UcmFpbkRhdGEuRGVzY3JpYmVy",
            "V2l0aENvbnNpc3QuRGVzY3JpYmVyLlRyYWluEk8KDmV4dGVybmFsX3RyYWlu",
            "GAIgASgLMjcuVHJhaW5EYXRhLkRlc2NyaWJlcldpdGhDb25zaXN0LkRlc2Ny",
            "aWJlci5FeHRlcm5hbFRyYWluElAKDmRlc2NyaWJlcl90eXBlGAMgASgOMjgu",
            "VHJhaW5EYXRhLkRlc2NyaWJlcldpdGhDb25zaXN0LkRlc2NyaWJlci5FRGVz",
            "Y3JpYmVyVHlwZRIQCghxdWV1ZV9pZBgEIAEoDRIOCgZ0ZHNfaWQYBSABKA0S",
            "FAoMZHluYW1pY19iaXRzGAYgASgEEiEKGXRpbWVfc3RhbXBfb2ZfaGVhZF9t",
            "b3ZpbmcYByABKAQSMAoOdHJhaW5fcG9zaXRpb24YCCABKAsyGC5UcmFpbkRh",
            "dGEuVHJhaW5Qb3NpdGlvbhI6ChNtb3ZlbWVudF9jb250cm9sbGVyGAkgASgL",
            "Mh0uVHJhaW5EYXRhLk1vdmVtZW50Q29udHJvbGxlchI1ChN0cmFpbl9wb3Np",
            "dGlvbl9jb3JlGAogASgLMhguVHJhaW5EYXRhLlRyYWluUG9zaXRpb24SOAoW",
            "dHJhaW5fcG9zaXRpb25fc2VnbWVudBgLIAEoCzIYLlRyYWluRGF0YS5UcmFp",
            "blBvc2l0aW9uEhAKCGttX3ZhbHVlGAwgASgDGv4CCgVUcmFpbhIKCgJpZBgB",
            "IAEoDRIRCglkZXNjcmliZXIYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkS",
            "EAoIb3Blcm5hbWUYBCABKAkSDwoHc3lzbmFtZRgFIAEoCRIxChJvcmllbnRl",
            "ZF9kaXJlY3Rpb24YBiABKA4yFS5UcmFpbkRhdGEuRURpcmVjdGlvbhIxChJz",
            "dGVwcGluZ19kaXJlY3Rpb24YByABKA4yFS5UcmFpbkRhdGEuRURpcmVjdGlv",
            "bhJSCgxkeW5hbWljX2luZm8YCCABKAsyPC5UcmFpbkRhdGEuRGVzY3JpYmVy",
            "V2l0aENvbnNpc3QuRGVzY3JpYmVyLlRyYWluLlRyYWluRHluSW5mbxIrCg50",
            "cmFpbl9wcm9wZXJ0eRgJIAMoCzITLlRyYWluRGF0YS5Qcm9wZXJ0eRo3CgxU",
            "cmFpbkR5bkluZm8SFAoMdHJhaW5fc3RhdHVzGAEgASgFEhEKCWRldmlhdGlv",
            "bhgCIAEoBRqRBQoNRXh0ZXJuYWxUcmFpbhIMCgRndWlkGAEgASgJEhYKDmV4",
            "dGVybmFsX3RyYWluGAIgASgJEhkKEWV4dGVybmFsX3RyYWluX2lkGAMgASgN",
            "EhIKCmpvdXJuZXlfaWQYBCABKA0SWgoMam91cm5leV90eXBlGAUgASgOMkQu",
            "VHJhaW5EYXRhLkRlc2NyaWJlcldpdGhDb25zaXN0LkRlc2NyaWJlci5FeHRl",
            "cm5hbFRyYWluLkVKb3VybmV5VHlwZRIVCg1qb3VybmV5X3NlcW5vGAYgASgF",
            "EhQKDHVzZXJfY3JlYXRlZBgHIAEoCBISCgp2ZWhpY2xlX2lkGAggASgJEhYK",
            "DmRlc3RpbmF0aW9uX2lkGAkgASgNEhMKC2Rlc3RpbmF0aW9uGAogASgJEjQK",
            "F2V4dGVybmFsX3RyYWluX3Byb3BlcnR5GAsgAygLMhMuVHJhaW5EYXRhLlBy",
            "b3BlcnR5IqoCCgxFSm91cm5leVR5cGUSDQoJVU5ERUZJTkVEEAASDgoKQ09N",
            "TUVSQ0lBTBACEg0KCUlOSkVDVElPThADEg4KCldJVEhEUkFXQUwQBBIMCghU",
            "UkFJTklORxAFEgoKBlRSSUFMUxAGEgcKA0hMUBAHEhAKDFdJVEhPVVRfVFlQ",
            "RRAIEhIKDk5PTl9DT01NRVJDSUFMEAkSFgoSQ09NTUVSQ0lBTF9IRUFEV0FZ",
            "EAoSGgoWTk9OX0NPTU1FUkNJQUxfSEVBRFdBWRALEgwKCERFR1JBREVEEAwS",
            "FQoRT1BFTklOR19JTkpFQ1RJT04QDRIWChJPUEVOSU5HX0NPTU1FUkNJQUwQ",
            "DhIiCh5HT0lOR19UT19DT01NRVJDSUFMX1RJTUVUQUJMRUQQDyIpCg5FRGVz",
            "Y3JpYmVyVHlwZRIMCghTRVFVRU5DRRAAEgkKBVRSQUlOEAEa1AEKDFRyYWlu",
            "Q29uc2lzdBIZChFhY3RpdmVfdmVoaWNsZV9pZBgBIAEoDRJFCgd2ZWhpY2xl",
            "GAIgAygLMjQuVHJhaW5EYXRhLkRlc2NyaWJlcldpdGhDb25zaXN0LlRyYWlu",
            "Q29uc2lzdC5WZWhpY2xlGmIKB1ZlaGljbGUSEgoKdmVoaWNsZV9pZBgBIAEo",
            "DRIUCgx2ZWhpY2xlX25hbWUYAiABKAkSLQoQdmVoaWNsZV9wcm9wZXJ0eRgD",
            "IAMoCzITLlRyYWluRGF0YS5Qcm9wZXJ0eRqZBwoWVHJhaW5EeW5hbWljVGlt",
            "aW5nSW5mbxJiCg5tb3ZlbWVudF9zdGF0ZRgBIAEoDjJKLlRyYWluRGF0YS5E",
            "ZXNjcmliZXJXaXRoQ29uc2lzdC5UcmFpbkR5bmFtaWNUaW1pbmdJbmZvLkVU",
            "cmFpbk1vdmVtZW50U3RhdGUSaQoRbmV4dF9zdGF0aW9uX2luZm8YAiABKAsy",
            "Ti5UcmFpbkRhdGEuRGVzY3JpYmVyV2l0aENvbnNpc3QuVHJhaW5EeW5hbWlj",
            "VGltaW5nSW5mby5UcmFpbkR5bmFtaWNTdGF0aW9uSW5mbxJpChFsYXN0X3N0",
            "YXRpb25faW5mbxgDIAMoCzJOLlRyYWluRGF0YS5EZXNjcmliZXJXaXRoQ29u",
            "c2lzdC5UcmFpbkR5bmFtaWNUaW1pbmdJbmZvLlRyYWluRHluYW1pY1N0YXRp",
            "b25JbmZvGpsDChdUcmFpbkR5bmFtaWNTdGF0aW9uSW5mbxISCgpzdGF0aW9u",
            "X2lkGAEgASgNEhMKC3BsYXRmb3JtX2lkGAIgASgNEnMKDXRyYWZmaWNfZXZl",
            "bnQYAyABKA4yXC5UcmFpbkRhdGEuRGVzY3JpYmVyV2l0aENvbnNpc3QuVHJh",
            "aW5EeW5hbWljVGltaW5nSW5mby5UcmFpbkR5bmFtaWNTdGF0aW9uSW5mby5F",
            "VHJhZmZpY0V2ZW50EhQKDHBsYW5uZWRfdGltZRgEIAEoBBITCgtzY2hlZHVs",
            "ZV9pZBgFIAEoDRIYChBuZXh0X3NjaGVkdWxlX2lkGAYgASgNEhUKDW9jY3Vy",
            "cmVkX3RpbWUYByABKAQSFgoOcmVndWxhdGVkX3RpbWUYCCABKAQSMgoqbmV4",
            "dF9wbGFubmVkX2RlcGFydHVyZV90aW1lX3RvX2NvbXBseV93aXRoGAkgASgE",
            "IjoKDUVUcmFmZmljRXZlbnQSDQoJVU5ERUZJTkVEEAASCwoHQVJSSVZBTBAB",
            "Eg0KCURFUEFSVFVSRRACIqYBChNFVHJhaW5Nb3ZlbWVudFN0YXRlEgsKB1VO",
            "S05PV04QABIKCgZNT1ZJTkcQARIWChJTVE9QUEVEX0FUX1NUQVRJT04QAhIl",
            "CiFTVE9QUEVEX09OX0xJTkVfRFVFX1RPX1NJR05BTExJTkcQAxI3CjNTVE9Q",
            "UEVEX09OX0xJTkVfRFVFX1RPX09USEVSX1JFQVNPTl9USEFOX1NJR05BTExJ",
            "TkcQBCI2ChBFRGVzY3JpYmVyQWN0aW9uEgoKBkNSRUFURRAAEgoKBkNIQU5H",
            "RRABEgoKBlJFTU9WRRACInsKGERlc2NyaWJlcldpdGhDb25zaXN0TGlzdBIr",
            "Cgt1cGRhdGVfbW9kZRgBIAEoDjIWLlRyYWluRGF0YS5FVXBkYXRlTW9kZRIy",
            "CglkZXNjcmliZXIYAiADKAsyHy5UcmFpbkRhdGEuRGVzY3JpYmVyV2l0aENv",
            "bnNpc3QixAEKDVRyYWluTW92ZW1lbnQSCgoCaWQYASABKA0SKAoJZGlyZWN0",
            "aW9uGAIgASgOMhUuVHJhaW5EYXRhLkVEaXJlY3Rpb24SFQoNb2NjdXJyZWRf",
            "dGltZRgDIAEoBBIqCghwb3NpdGlvbhgEIAEoCzIYLlRyYWluRGF0YS5UcmFp",
            "blBvc2l0aW9uEjoKE21vdmVtZW50X2NvbnRyb2xsZXIYBSABKAsyHS5UcmFp",
            "bkRhdGEuTW92ZW1lbnRDb250cm9sbGVyIsQBCg1UcmFpbklkZW50aXR5Eg0K",
            "BXN5c2lkGAEgASgNEgwKBGd1aWQYAiABKAkSEQoJZGVzY3JpYmVyGAMgASgJ",
            "EkQKEWV4dGVybmFsX2lkZW50aXR5GAQgAygLMikuVHJhaW5EYXRhLlRyYWlu",
            "SWRlbnRpdHkuRXh0ZXJuYWxJZGVudGl0eRo9ChBFeHRlcm5hbElkZW50aXR5",
            "EhcKD2V4dGVybmFsX3N5c3RlbRgBIAEoCRIQCghpZGVudGl0eRgCIAEoCSKR",
            "AQoUVHJhaW5Db21tYW5kU3RhcnRpbmcSFgoOdHJhbnNhY3Rpb25faWQYASAB",
            "KA0SLwoNdHJhaW5fY29tbWFuZBgCIAEoDjIYLlRyYWluRGF0YS5FVHJhaW5D",
            "b21tYW5kEjAKDnRyYWluX2lkZW50aXR5GAMgAygLMhguVHJhaW5EYXRhLlRy",
            "YWluSWRlbnRpdHki/gEKEVRyYWluQ29tbWFuZEVuZGVkEhYKDnRyYW5zYWN0",
            "aW9uX2lkGAEgASgNEi8KDXRyYWluX2NvbW1hbmQYAiABKA4yGC5UcmFpbkRh",
            "dGEuRVRyYWluQ29tbWFuZBIwCg50cmFpbl9pZGVudGl0eRgDIAMoCzIYLlRy",
            "YWluRGF0YS5UcmFpbklkZW50aXR5EkAKBnN0YXR1cxgEIAEoDjIwLlRyYWlu",
            "RGF0YS5UcmFpbkNvbW1hbmRFbmRlZC5FVHJhaW5Db21tYW5kU3RhdHVzIiwK",
            "E0VUcmFpbkNvbW1hbmRTdGF0dXMSCAoERkFJTBAAEgsKB1NVQ0NFU1MQASpJ",
            "CgtFVXBkYXRlTW9kZRIQCgxTVEFUSUNfRklSU1QQABIKCgZTVEFUSUMQARIP",
            "CgtTVEFUSUNfTEFTVBACEgsKB0RZTkFNSUMQAyo+CgpFRGlyZWN0aW9uEgsK",
            "B1VOS05PV04QABILCgdOT01JTkFMEAESDAoIT1BQT1NJVEUQAhIICgRCT1RI",
            "EAMqXgoNRVRyYWluQ29tbWFuZBIHCgNTRVQQABILCgdSRVBMQUNFEAESCgoG",
            "UkVNT1ZFEAISCAoETU9WRRADEgwKCEVYQ0hBTkdFEAQSCQoFU1BMSVQQBRII",
            "CgRKT0lOEAZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TrainData.EUpdateMode), typeof(global::TrainData.EDirection), typeof(global::TrainData.ETrainCommand), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.Property), global::TrainData.Property.Parser, new[]{ "Name", "Value", "Type", "Valid" }, null, new[]{ typeof(global::TrainData.Property.Types.EPropertyType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.MovementController), global::TrainData.MovementController.Parser, new[]{ "MovementController_", "CanControlMovement", "MovementAgreement", "Sender", "Owner" }, null, new[]{ typeof(global::TrainData.MovementController.Types.EMovementControl) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainPosition), global::TrainData.TrainPosition.Parser, new[]{ "Footprint", "VirtualOccupancy", "Propagation" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainPosition.Types.ElementExtension), global::TrainData.TrainPosition.Types.ElementExtension.Parser, new[]{ "StartDistance", "EndDistance", "StartDirection", "EndDirection", "Element", "ValidObjectType", "Modified", "ElementStr" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist), global::TrainData.DescriberWithConsist.Parser, new[]{ "Action", "Describer", "TrainConsist", "DynamicTimingInfo" }, null, new[]{ typeof(global::TrainData.DescriberWithConsist.Types.EDescriberAction) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.Describer), global::TrainData.DescriberWithConsist.Types.Describer.Parser, new[]{ "Train", "ExternalTrain", "DescriberType", "QueueId", "TdsId", "DynamicBits", "TimeStampOfHeadMoving", "TrainPosition", "MovementController", "TrainPositionCore", "TrainPositionSegment", "KmValue" }, null, new[]{ typeof(global::TrainData.DescriberWithConsist.Types.Describer.Types.EDescriberType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.Describer.Types.Train), global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Parser, new[]{ "Id", "Describer", "Description", "Opername", "Sysname", "OrientedDirection", "SteppingDirection", "DynamicInfo", "TrainProperty" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo), global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo.Parser, new[]{ "TrainStatus", "Deviation" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain), global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain.Parser, new[]{ "Guid", "ExternalTrain_", "ExternalTrainId", "JourneyId", "JourneyType", "JourneySeqno", "UserCreated", "VehicleId", "DestinationId", "Destination", "ExternalTrainProperty" }, null, new[]{ typeof(global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain.Types.EJourneyType) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.TrainConsist), global::TrainData.DescriberWithConsist.Types.TrainConsist.Parser, new[]{ "ActiveVehicleId", "Vehicle" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle), global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle.Parser, new[]{ "VehicleId", "VehicleName", "VehicleProperty" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo), global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Parser, new[]{ "MovementState", "NextStationInfo", "LastStationInfo" }, null, new[]{ typeof(global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.ETrainMovementState) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo), global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Parser, new[]{ "StationId", "PlatformId", "TrafficEvent", "PlannedTime", "ScheduleId", "NextScheduleId", "OccurredTime", "RegulatedTime", "NextPlannedDepartureTimeToComplyWith" }, null, new[]{ typeof(global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Types.ETrafficEvent) }, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.DescriberWithConsistList), global::TrainData.DescriberWithConsistList.Parser, new[]{ "UpdateMode", "Describer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainMovement), global::TrainData.TrainMovement.Parser, new[]{ "Id", "Direction", "OccurredTime", "Position", "MovementController" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainIdentity), global::TrainData.TrainIdentity.Parser, new[]{ "Sysid", "Guid", "Describer", "ExternalIdentity" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainIdentity.Types.ExternalIdentity), global::TrainData.TrainIdentity.Types.ExternalIdentity.Parser, new[]{ "ExternalSystem", "Identity" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainCommandStarting), global::TrainData.TrainCommandStarting.Parser, new[]{ "TransactionId", "TrainCommand", "TrainIdentity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrainData.TrainCommandEnded), global::TrainData.TrainCommandEnded.Parser, new[]{ "TransactionId", "TrainCommand", "TrainIdentity", "Status" }, null, new[]{ typeof(global::TrainData.TrainCommandEnded.Types.ETrainCommandStatus) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EUpdateMode {
    [pbr::OriginalName("STATIC_FIRST")] StaticFirst = 0,
    [pbr::OriginalName("STATIC")] Static = 1,
    [pbr::OriginalName("STATIC_LAST")] StaticLast = 2,
    [pbr::OriginalName("DYNAMIC")] Dynamic = 3,
  }

  public enum EDirection {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("NOMINAL")] Nominal = 1,
    [pbr::OriginalName("OPPOSITE")] Opposite = 2,
    [pbr::OriginalName("BOTH")] Both = 3,
  }

  public enum ETrainCommand {
    [pbr::OriginalName("SET")] Set = 0,
    [pbr::OriginalName("REPLACE")] Replace = 1,
    [pbr::OriginalName("REMOVE")] Remove = 2,
    [pbr::OriginalName("MOVE")] Move = 3,
    [pbr::OriginalName("EXCHANGE")] Exchange = 4,
    [pbr::OriginalName("SPLIT")] Split = 5,
    [pbr::OriginalName("JOIN")] Join = 6,
  }

  #endregion

  #region Messages
  public sealed partial class Property : pb::IMessage<Property> {
    private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Property> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property(Property other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      type_ = other.type_;
      valid_ = other.valid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property Clone() {
      return new Property(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::TrainData.Property.Types.EPropertyType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.Property.Types.EPropertyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "valid" field.</summary>
    public const int ValidFieldNumber = 4;
    private bool valid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Valid {
      get { return valid_; }
      set {
        valid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Property);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Property other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (Type != other.Type) return false;
      if (Valid != other.Valid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Valid != false) hash ^= Valid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Valid != false) {
        output.WriteRawTag(32);
        output.WriteBool(Valid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Valid != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Property other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Valid != false) {
        Valid = other.Valid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            type_ = (global::TrainData.Property.Types.EPropertyType) input.ReadEnum();
            break;
          }
          case 32: {
            Valid = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Property message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EPropertyType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("TMS_TT_OBJECT")] TmsTtObject = 1,
        [pbr::OriginalName("TMS_TRIP_OBJECT")] TmsTripObject = 2,
        [pbr::OriginalName("INTEGER")] Integer = 3,
        [pbr::OriginalName("BOOLEAN")] Boolean = 4,
        [pbr::OriginalName("STRING")] String = 5,
        [pbr::OriginalName("REAL")] Real = 6,
        [pbr::OriginalName("BIT_VECTOR")] BitVector = 7,
        [pbr::OriginalName("TIMESTAMP")] Timestamp = 8,
      }

    }
    #endregion

  }

  public sealed partial class MovementController : pb::IMessage<MovementController> {
    private static readonly pb::MessageParser<MovementController> _parser = new pb::MessageParser<MovementController>(() => new MovementController());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MovementController> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementController() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementController(MovementController other) : this() {
      movementController_ = other.movementController_;
      canControlMovement_ = other.canControlMovement_;
      movementAgreement_ = other.movementAgreement_;
      sender_ = other.sender_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementController Clone() {
      return new MovementController(this);
    }

    /// <summary>Field number for the "movement_controller" field.</summary>
    public const int MovementController_FieldNumber = 1;
    private global::TrainData.MovementController.Types.EMovementControl movementController_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.MovementController.Types.EMovementControl MovementController_ {
      get { return movementController_; }
      set {
        movementController_ = value;
      }
    }

    /// <summary>Field number for the "can_control_movement" field.</summary>
    public const int CanControlMovementFieldNumber = 2;
    private bool canControlMovement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanControlMovement {
      get { return canControlMovement_; }
      set {
        canControlMovement_ = value;
      }
    }

    /// <summary>Field number for the "movement_agreement" field.</summary>
    public const int MovementAgreementFieldNumber = 3;
    private uint movementAgreement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MovementAgreement {
      get { return movementAgreement_; }
      set {
        movementAgreement_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 4;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MovementController);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MovementController other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MovementController_ != other.MovementController_) return false;
      if (CanControlMovement != other.CanControlMovement) return false;
      if (MovementAgreement != other.MovementAgreement) return false;
      if (Sender != other.Sender) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MovementController_ != 0) hash ^= MovementController_.GetHashCode();
      if (CanControlMovement != false) hash ^= CanControlMovement.GetHashCode();
      if (MovementAgreement != 0) hash ^= MovementAgreement.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MovementController_ != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MovementController_);
      }
      if (CanControlMovement != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanControlMovement);
      }
      if (MovementAgreement != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MovementAgreement);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sender);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MovementController_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MovementController_);
      }
      if (CanControlMovement != false) {
        size += 1 + 1;
      }
      if (MovementAgreement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MovementAgreement);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MovementController other) {
      if (other == null) {
        return;
      }
      if (other.MovementController_ != 0) {
        MovementController_ = other.MovementController_;
      }
      if (other.CanControlMovement != false) {
        CanControlMovement = other.CanControlMovement;
      }
      if (other.MovementAgreement != 0) {
        MovementAgreement = other.MovementAgreement;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            movementController_ = (global::TrainData.MovementController.Types.EMovementControl) input.ReadEnum();
            break;
          }
          case 16: {
            CanControlMovement = input.ReadBool();
            break;
          }
          case 24: {
            MovementAgreement = input.ReadUInt32();
            break;
          }
          case 34: {
            Sender = input.ReadString();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MovementController message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EMovementControl {
        [pbr::OriginalName("TDS")] Tds = 0,
        [pbr::OriginalName("CBTC")] Cbtc = 1,
        [pbr::OriginalName("EXTERNAL")] External = 2,
      }

    }
    #endregion

  }

  public sealed partial class TrainPosition : pb::IMessage<TrainPosition> {
    private static readonly pb::MessageParser<TrainPosition> _parser = new pb::MessageParser<TrainPosition>(() => new TrainPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainPosition(TrainPosition other) : this() {
      Footprint = other.footprint_ != null ? other.Footprint.Clone() : null;
      VirtualOccupancy = other.virtualOccupancy_ != null ? other.VirtualOccupancy.Clone() : null;
      Propagation = other.propagation_ != null ? other.Propagation.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainPosition Clone() {
      return new TrainPosition(this);
    }

    /// <summary>Field number for the "footprint" field.</summary>
    public const int FootprintFieldNumber = 1;
    private global::TrainData.TrainPosition.Types.ElementExtension footprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.TrainPosition.Types.ElementExtension Footprint {
      get { return footprint_; }
      set {
        footprint_ = value;
      }
    }

    /// <summary>Field number for the "virtual_occupancy" field.</summary>
    public const int VirtualOccupancyFieldNumber = 2;
    private global::TrainData.TrainPosition.Types.ElementExtension virtualOccupancy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.TrainPosition.Types.ElementExtension VirtualOccupancy {
      get { return virtualOccupancy_; }
      set {
        virtualOccupancy_ = value;
      }
    }

    /// <summary>Field number for the "propagation" field.</summary>
    public const int PropagationFieldNumber = 3;
    private global::TrainData.TrainPosition.Types.ElementExtension propagation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.TrainPosition.Types.ElementExtension Propagation {
      get { return propagation_; }
      set {
        propagation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Footprint, other.Footprint)) return false;
      if (!object.Equals(VirtualOccupancy, other.VirtualOccupancy)) return false;
      if (!object.Equals(Propagation, other.Propagation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (footprint_ != null) hash ^= Footprint.GetHashCode();
      if (virtualOccupancy_ != null) hash ^= VirtualOccupancy.GetHashCode();
      if (propagation_ != null) hash ^= Propagation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (footprint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Footprint);
      }
      if (virtualOccupancy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VirtualOccupancy);
      }
      if (propagation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Propagation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (footprint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Footprint);
      }
      if (virtualOccupancy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualOccupancy);
      }
      if (propagation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Propagation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainPosition other) {
      if (other == null) {
        return;
      }
      if (other.footprint_ != null) {
        if (footprint_ == null) {
          footprint_ = new global::TrainData.TrainPosition.Types.ElementExtension();
        }
        Footprint.MergeFrom(other.Footprint);
      }
      if (other.virtualOccupancy_ != null) {
        if (virtualOccupancy_ == null) {
          virtualOccupancy_ = new global::TrainData.TrainPosition.Types.ElementExtension();
        }
        VirtualOccupancy.MergeFrom(other.VirtualOccupancy);
      }
      if (other.propagation_ != null) {
        if (propagation_ == null) {
          propagation_ = new global::TrainData.TrainPosition.Types.ElementExtension();
        }
        Propagation.MergeFrom(other.Propagation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (footprint_ == null) {
              footprint_ = new global::TrainData.TrainPosition.Types.ElementExtension();
            }
            input.ReadMessage(footprint_);
            break;
          }
          case 18: {
            if (virtualOccupancy_ == null) {
              virtualOccupancy_ = new global::TrainData.TrainPosition.Types.ElementExtension();
            }
            input.ReadMessage(virtualOccupancy_);
            break;
          }
          case 26: {
            if (propagation_ == null) {
              propagation_ = new global::TrainData.TrainPosition.Types.ElementExtension();
            }
            input.ReadMessage(propagation_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrainPosition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ElementExtension : pb::IMessage<ElementExtension> {
        private static readonly pb::MessageParser<ElementExtension> _parser = new pb::MessageParser<ElementExtension>(() => new ElementExtension());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ElementExtension> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TrainData.TrainPosition.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElementExtension() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElementExtension(ElementExtension other) : this() {
          startDistance_ = other.startDistance_;
          endDistance_ = other.endDistance_;
          startDirection_ = other.startDirection_;
          endDirection_ = other.endDirection_;
          element_ = other.element_.Clone();
          validObjectType_ = other.validObjectType_.Clone();
          modified_ = other.modified_;
          elementStr_ = other.elementStr_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ElementExtension Clone() {
          return new ElementExtension(this);
        }

        /// <summary>Field number for the "start_distance" field.</summary>
        public const int StartDistanceFieldNumber = 1;
        private uint startDistance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint StartDistance {
          get { return startDistance_; }
          set {
            startDistance_ = value;
          }
        }

        /// <summary>Field number for the "end_distance" field.</summary>
        public const int EndDistanceFieldNumber = 2;
        private uint endDistance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint EndDistance {
          get { return endDistance_; }
          set {
            endDistance_ = value;
          }
        }

        /// <summary>Field number for the "start_direction" field.</summary>
        public const int StartDirectionFieldNumber = 3;
        private global::TrainData.EDirection startDirection_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.EDirection StartDirection {
          get { return startDirection_; }
          set {
            startDirection_ = value;
          }
        }

        /// <summary>Field number for the "end_direction" field.</summary>
        public const int EndDirectionFieldNumber = 4;
        private global::TrainData.EDirection endDirection_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.EDirection EndDirection {
          get { return endDirection_; }
          set {
            endDirection_ = value;
          }
        }

        /// <summary>Field number for the "element" field.</summary>
        public const int ElementFieldNumber = 5;
        private static readonly pb::FieldCodec<uint> _repeated_element_codec
            = pb::FieldCodec.ForUInt32(42);
        private readonly pbc::RepeatedField<uint> element_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Element {
          get { return element_; }
        }

        /// <summary>Field number for the "valid_object_type" field.</summary>
        public const int ValidObjectTypeFieldNumber = 6;
        private static readonly pb::FieldCodec<uint> _repeated_validObjectType_codec
            = pb::FieldCodec.ForUInt32(50);
        private readonly pbc::RepeatedField<uint> validObjectType_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> ValidObjectType {
          get { return validObjectType_; }
        }

        /// <summary>Field number for the "modified" field.</summary>
        public const int ModifiedFieldNumber = 7;
        private bool modified_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Modified {
          get { return modified_; }
          set {
            modified_ = value;
          }
        }

        /// <summary>Field number for the "element_str" field.</summary>
        public const int ElementStrFieldNumber = 8;
        private static readonly pb::FieldCodec<string> _repeated_elementStr_codec
            = pb::FieldCodec.ForString(66);
        private readonly pbc::RepeatedField<string> elementStr_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> ElementStr {
          get { return elementStr_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ElementExtension);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ElementExtension other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StartDistance != other.StartDistance) return false;
          if (EndDistance != other.EndDistance) return false;
          if (StartDirection != other.StartDirection) return false;
          if (EndDirection != other.EndDirection) return false;
          if(!element_.Equals(other.element_)) return false;
          if(!validObjectType_.Equals(other.validObjectType_)) return false;
          if (Modified != other.Modified) return false;
          if(!elementStr_.Equals(other.elementStr_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (StartDistance != 0) hash ^= StartDistance.GetHashCode();
          if (EndDistance != 0) hash ^= EndDistance.GetHashCode();
          if (StartDirection != 0) hash ^= StartDirection.GetHashCode();
          if (EndDirection != 0) hash ^= EndDirection.GetHashCode();
          hash ^= element_.GetHashCode();
          hash ^= validObjectType_.GetHashCode();
          if (Modified != false) hash ^= Modified.GetHashCode();
          hash ^= elementStr_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (StartDistance != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(StartDistance);
          }
          if (EndDistance != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(EndDistance);
          }
          if (StartDirection != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) StartDirection);
          }
          if (EndDirection != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) EndDirection);
          }
          element_.WriteTo(output, _repeated_element_codec);
          validObjectType_.WriteTo(output, _repeated_validObjectType_codec);
          if (Modified != false) {
            output.WriteRawTag(56);
            output.WriteBool(Modified);
          }
          elementStr_.WriteTo(output, _repeated_elementStr_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (StartDistance != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartDistance);
          }
          if (EndDistance != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndDistance);
          }
          if (StartDirection != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StartDirection);
          }
          if (EndDirection != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EndDirection);
          }
          size += element_.CalculateSize(_repeated_element_codec);
          size += validObjectType_.CalculateSize(_repeated_validObjectType_codec);
          if (Modified != false) {
            size += 1 + 1;
          }
          size += elementStr_.CalculateSize(_repeated_elementStr_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ElementExtension other) {
          if (other == null) {
            return;
          }
          if (other.StartDistance != 0) {
            StartDistance = other.StartDistance;
          }
          if (other.EndDistance != 0) {
            EndDistance = other.EndDistance;
          }
          if (other.StartDirection != 0) {
            StartDirection = other.StartDirection;
          }
          if (other.EndDirection != 0) {
            EndDirection = other.EndDirection;
          }
          element_.Add(other.element_);
          validObjectType_.Add(other.validObjectType_);
          if (other.Modified != false) {
            Modified = other.Modified;
          }
          elementStr_.Add(other.elementStr_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                StartDistance = input.ReadUInt32();
                break;
              }
              case 16: {
                EndDistance = input.ReadUInt32();
                break;
              }
              case 24: {
                startDirection_ = (global::TrainData.EDirection) input.ReadEnum();
                break;
              }
              case 32: {
                endDirection_ = (global::TrainData.EDirection) input.ReadEnum();
                break;
              }
              case 42:
              case 40: {
                element_.AddEntriesFrom(input, _repeated_element_codec);
                break;
              }
              case 50:
              case 48: {
                validObjectType_.AddEntriesFrom(input, _repeated_validObjectType_codec);
                break;
              }
              case 56: {
                Modified = input.ReadBool();
                break;
              }
              case 66: {
                elementStr_.AddEntriesFrom(input, _repeated_elementStr_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DescriberWithConsist : pb::IMessage<DescriberWithConsist> {
    private static readonly pb::MessageParser<DescriberWithConsist> _parser = new pb::MessageParser<DescriberWithConsist>(() => new DescriberWithConsist());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescriberWithConsist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsist(DescriberWithConsist other) : this() {
      action_ = other.action_;
      Describer = other.describer_ != null ? other.Describer.Clone() : null;
      TrainConsist = other.trainConsist_ != null ? other.TrainConsist.Clone() : null;
      DynamicTimingInfo = other.dynamicTimingInfo_ != null ? other.DynamicTimingInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsist Clone() {
      return new DescriberWithConsist(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::TrainData.DescriberWithConsist.Types.EDescriberAction action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.DescriberWithConsist.Types.EDescriberAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "describer" field.</summary>
    public const int DescriberFieldNumber = 2;
    private global::TrainData.DescriberWithConsist.Types.Describer describer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.DescriberWithConsist.Types.Describer Describer {
      get { return describer_; }
      set {
        describer_ = value;
      }
    }

    /// <summary>Field number for the "train_consist" field.</summary>
    public const int TrainConsistFieldNumber = 3;
    private global::TrainData.DescriberWithConsist.Types.TrainConsist trainConsist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.DescriberWithConsist.Types.TrainConsist TrainConsist {
      get { return trainConsist_; }
      set {
        trainConsist_ = value;
      }
    }

    /// <summary>Field number for the "dynamic_timing_info" field.</summary>
    public const int DynamicTimingInfoFieldNumber = 4;
    private global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo dynamicTimingInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo DynamicTimingInfo {
      get { return dynamicTimingInfo_; }
      set {
        dynamicTimingInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescriberWithConsist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescriberWithConsist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Describer, other.Describer)) return false;
      if (!object.Equals(TrainConsist, other.TrainConsist)) return false;
      if (!object.Equals(DynamicTimingInfo, other.DynamicTimingInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      if (describer_ != null) hash ^= Describer.GetHashCode();
      if (trainConsist_ != null) hash ^= TrainConsist.GetHashCode();
      if (dynamicTimingInfo_ != null) hash ^= DynamicTimingInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (describer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Describer);
      }
      if (trainConsist_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TrainConsist);
      }
      if (dynamicTimingInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DynamicTimingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (describer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Describer);
      }
      if (trainConsist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainConsist);
      }
      if (dynamicTimingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicTimingInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescriberWithConsist other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.describer_ != null) {
        if (describer_ == null) {
          describer_ = new global::TrainData.DescriberWithConsist.Types.Describer();
        }
        Describer.MergeFrom(other.Describer);
      }
      if (other.trainConsist_ != null) {
        if (trainConsist_ == null) {
          trainConsist_ = new global::TrainData.DescriberWithConsist.Types.TrainConsist();
        }
        TrainConsist.MergeFrom(other.TrainConsist);
      }
      if (other.dynamicTimingInfo_ != null) {
        if (dynamicTimingInfo_ == null) {
          dynamicTimingInfo_ = new global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo();
        }
        DynamicTimingInfo.MergeFrom(other.DynamicTimingInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            action_ = (global::TrainData.DescriberWithConsist.Types.EDescriberAction) input.ReadEnum();
            break;
          }
          case 18: {
            if (describer_ == null) {
              describer_ = new global::TrainData.DescriberWithConsist.Types.Describer();
            }
            input.ReadMessage(describer_);
            break;
          }
          case 26: {
            if (trainConsist_ == null) {
              trainConsist_ = new global::TrainData.DescriberWithConsist.Types.TrainConsist();
            }
            input.ReadMessage(trainConsist_);
            break;
          }
          case 34: {
            if (dynamicTimingInfo_ == null) {
              dynamicTimingInfo_ = new global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo();
            }
            input.ReadMessage(dynamicTimingInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DescriberWithConsist message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EDescriberAction {
        [pbr::OriginalName("CREATE")] Create = 0,
        [pbr::OriginalName("CHANGE")] Change = 1,
        [pbr::OriginalName("REMOVE")] Remove = 2,
      }

      public sealed partial class Describer : pb::IMessage<Describer> {
        private static readonly pb::MessageParser<Describer> _parser = new pb::MessageParser<Describer>(() => new Describer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Describer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TrainData.DescriberWithConsist.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Describer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Describer(Describer other) : this() {
          Train = other.train_ != null ? other.Train.Clone() : null;
          ExternalTrain = other.externalTrain_ != null ? other.ExternalTrain.Clone() : null;
          describerType_ = other.describerType_;
          queueId_ = other.queueId_;
          tdsId_ = other.tdsId_;
          dynamicBits_ = other.dynamicBits_;
          timeStampOfHeadMoving_ = other.timeStampOfHeadMoving_;
          TrainPosition = other.trainPosition_ != null ? other.TrainPosition.Clone() : null;
          MovementController = other.movementController_ != null ? other.MovementController.Clone() : null;
          TrainPositionCore = other.trainPositionCore_ != null ? other.TrainPositionCore.Clone() : null;
          TrainPositionSegment = other.trainPositionSegment_ != null ? other.TrainPositionSegment.Clone() : null;
          kmValue_ = other.kmValue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Describer Clone() {
          return new Describer(this);
        }

        /// <summary>Field number for the "train" field.</summary>
        public const int TrainFieldNumber = 1;
        private global::TrainData.DescriberWithConsist.Types.Describer.Types.Train train_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.DescriberWithConsist.Types.Describer.Types.Train Train {
          get { return train_; }
          set {
            train_ = value;
          }
        }

        /// <summary>Field number for the "external_train" field.</summary>
        public const int ExternalTrainFieldNumber = 2;
        private global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain externalTrain_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain ExternalTrain {
          get { return externalTrain_; }
          set {
            externalTrain_ = value;
          }
        }

        /// <summary>Field number for the "describer_type" field.</summary>
        public const int DescriberTypeFieldNumber = 3;
        private global::TrainData.DescriberWithConsist.Types.Describer.Types.EDescriberType describerType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.DescriberWithConsist.Types.Describer.Types.EDescriberType DescriberType {
          get { return describerType_; }
          set {
            describerType_ = value;
          }
        }

        /// <summary>Field number for the "queue_id" field.</summary>
        public const int QueueIdFieldNumber = 4;
        private uint queueId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint QueueId {
          get { return queueId_; }
          set {
            queueId_ = value;
          }
        }

        /// <summary>Field number for the "tds_id" field.</summary>
        public const int TdsIdFieldNumber = 5;
        private uint tdsId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TdsId {
          get { return tdsId_; }
          set {
            tdsId_ = value;
          }
        }

        /// <summary>Field number for the "dynamic_bits" field.</summary>
        public const int DynamicBitsFieldNumber = 6;
        private ulong dynamicBits_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong DynamicBits {
          get { return dynamicBits_; }
          set {
            dynamicBits_ = value;
          }
        }

        /// <summary>Field number for the "time_stamp_of_head_moving" field.</summary>
        public const int TimeStampOfHeadMovingFieldNumber = 7;
        private ulong timeStampOfHeadMoving_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong TimeStampOfHeadMoving {
          get { return timeStampOfHeadMoving_; }
          set {
            timeStampOfHeadMoving_ = value;
          }
        }

        /// <summary>Field number for the "train_position" field.</summary>
        public const int TrainPositionFieldNumber = 8;
        private global::TrainData.TrainPosition trainPosition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.TrainPosition TrainPosition {
          get { return trainPosition_; }
          set {
            trainPosition_ = value;
          }
        }

        /// <summary>Field number for the "movement_controller" field.</summary>
        public const int MovementControllerFieldNumber = 9;
        private global::TrainData.MovementController movementController_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.MovementController MovementController {
          get { return movementController_; }
          set {
            movementController_ = value;
          }
        }

        /// <summary>Field number for the "train_position_core" field.</summary>
        public const int TrainPositionCoreFieldNumber = 10;
        private global::TrainData.TrainPosition trainPositionCore_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.TrainPosition TrainPositionCore {
          get { return trainPositionCore_; }
          set {
            trainPositionCore_ = value;
          }
        }

        /// <summary>Field number for the "train_position_segment" field.</summary>
        public const int TrainPositionSegmentFieldNumber = 11;
        private global::TrainData.TrainPosition trainPositionSegment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.TrainPosition TrainPositionSegment {
          get { return trainPositionSegment_; }
          set {
            trainPositionSegment_ = value;
          }
        }

        /// <summary>Field number for the "km_value" field.</summary>
        public const int KmValueFieldNumber = 12;
        private long kmValue_;
        /// <summary>
        /// Temporary for RJ TMS, will be removed!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long KmValue {
          get { return kmValue_; }
          set {
            kmValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Describer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Describer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Train, other.Train)) return false;
          if (!object.Equals(ExternalTrain, other.ExternalTrain)) return false;
          if (DescriberType != other.DescriberType) return false;
          if (QueueId != other.QueueId) return false;
          if (TdsId != other.TdsId) return false;
          if (DynamicBits != other.DynamicBits) return false;
          if (TimeStampOfHeadMoving != other.TimeStampOfHeadMoving) return false;
          if (!object.Equals(TrainPosition, other.TrainPosition)) return false;
          if (!object.Equals(MovementController, other.MovementController)) return false;
          if (!object.Equals(TrainPositionCore, other.TrainPositionCore)) return false;
          if (!object.Equals(TrainPositionSegment, other.TrainPositionSegment)) return false;
          if (KmValue != other.KmValue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (train_ != null) hash ^= Train.GetHashCode();
          if (externalTrain_ != null) hash ^= ExternalTrain.GetHashCode();
          if (DescriberType != 0) hash ^= DescriberType.GetHashCode();
          if (QueueId != 0) hash ^= QueueId.GetHashCode();
          if (TdsId != 0) hash ^= TdsId.GetHashCode();
          if (DynamicBits != 0UL) hash ^= DynamicBits.GetHashCode();
          if (TimeStampOfHeadMoving != 0UL) hash ^= TimeStampOfHeadMoving.GetHashCode();
          if (trainPosition_ != null) hash ^= TrainPosition.GetHashCode();
          if (movementController_ != null) hash ^= MovementController.GetHashCode();
          if (trainPositionCore_ != null) hash ^= TrainPositionCore.GetHashCode();
          if (trainPositionSegment_ != null) hash ^= TrainPositionSegment.GetHashCode();
          if (KmValue != 0L) hash ^= KmValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (train_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Train);
          }
          if (externalTrain_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ExternalTrain);
          }
          if (DescriberType != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DescriberType);
          }
          if (QueueId != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(QueueId);
          }
          if (TdsId != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(TdsId);
          }
          if (DynamicBits != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(DynamicBits);
          }
          if (TimeStampOfHeadMoving != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(TimeStampOfHeadMoving);
          }
          if (trainPosition_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(TrainPosition);
          }
          if (movementController_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(MovementController);
          }
          if (trainPositionCore_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(TrainPositionCore);
          }
          if (trainPositionSegment_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(TrainPositionSegment);
          }
          if (KmValue != 0L) {
            output.WriteRawTag(96);
            output.WriteInt64(KmValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (train_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Train);
          }
          if (externalTrain_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalTrain);
          }
          if (DescriberType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DescriberType);
          }
          if (QueueId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QueueId);
          }
          if (TdsId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TdsId);
          }
          if (DynamicBits != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DynamicBits);
          }
          if (TimeStampOfHeadMoving != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeStampOfHeadMoving);
          }
          if (trainPosition_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainPosition);
          }
          if (movementController_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MovementController);
          }
          if (trainPositionCore_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainPositionCore);
          }
          if (trainPositionSegment_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainPositionSegment);
          }
          if (KmValue != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(KmValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Describer other) {
          if (other == null) {
            return;
          }
          if (other.train_ != null) {
            if (train_ == null) {
              train_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.Train();
            }
            Train.MergeFrom(other.Train);
          }
          if (other.externalTrain_ != null) {
            if (externalTrain_ == null) {
              externalTrain_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain();
            }
            ExternalTrain.MergeFrom(other.ExternalTrain);
          }
          if (other.DescriberType != 0) {
            DescriberType = other.DescriberType;
          }
          if (other.QueueId != 0) {
            QueueId = other.QueueId;
          }
          if (other.TdsId != 0) {
            TdsId = other.TdsId;
          }
          if (other.DynamicBits != 0UL) {
            DynamicBits = other.DynamicBits;
          }
          if (other.TimeStampOfHeadMoving != 0UL) {
            TimeStampOfHeadMoving = other.TimeStampOfHeadMoving;
          }
          if (other.trainPosition_ != null) {
            if (trainPosition_ == null) {
              trainPosition_ = new global::TrainData.TrainPosition();
            }
            TrainPosition.MergeFrom(other.TrainPosition);
          }
          if (other.movementController_ != null) {
            if (movementController_ == null) {
              movementController_ = new global::TrainData.MovementController();
            }
            MovementController.MergeFrom(other.MovementController);
          }
          if (other.trainPositionCore_ != null) {
            if (trainPositionCore_ == null) {
              trainPositionCore_ = new global::TrainData.TrainPosition();
            }
            TrainPositionCore.MergeFrom(other.TrainPositionCore);
          }
          if (other.trainPositionSegment_ != null) {
            if (trainPositionSegment_ == null) {
              trainPositionSegment_ = new global::TrainData.TrainPosition();
            }
            TrainPositionSegment.MergeFrom(other.TrainPositionSegment);
          }
          if (other.KmValue != 0L) {
            KmValue = other.KmValue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (train_ == null) {
                  train_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.Train();
                }
                input.ReadMessage(train_);
                break;
              }
              case 18: {
                if (externalTrain_ == null) {
                  externalTrain_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain();
                }
                input.ReadMessage(externalTrain_);
                break;
              }
              case 24: {
                describerType_ = (global::TrainData.DescriberWithConsist.Types.Describer.Types.EDescriberType) input.ReadEnum();
                break;
              }
              case 32: {
                QueueId = input.ReadUInt32();
                break;
              }
              case 40: {
                TdsId = input.ReadUInt32();
                break;
              }
              case 48: {
                DynamicBits = input.ReadUInt64();
                break;
              }
              case 56: {
                TimeStampOfHeadMoving = input.ReadUInt64();
                break;
              }
              case 66: {
                if (trainPosition_ == null) {
                  trainPosition_ = new global::TrainData.TrainPosition();
                }
                input.ReadMessage(trainPosition_);
                break;
              }
              case 74: {
                if (movementController_ == null) {
                  movementController_ = new global::TrainData.MovementController();
                }
                input.ReadMessage(movementController_);
                break;
              }
              case 82: {
                if (trainPositionCore_ == null) {
                  trainPositionCore_ = new global::TrainData.TrainPosition();
                }
                input.ReadMessage(trainPositionCore_);
                break;
              }
              case 90: {
                if (trainPositionSegment_ == null) {
                  trainPositionSegment_ = new global::TrainData.TrainPosition();
                }
                input.ReadMessage(trainPositionSegment_);
                break;
              }
              case 96: {
                KmValue = input.ReadInt64();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Describer message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum EDescriberType {
            [pbr::OriginalName("SEQUENCE")] Sequence = 0,
            [pbr::OriginalName("TRAIN")] Train = 1,
          }

          public sealed partial class Train : pb::IMessage<Train> {
            private static readonly pb::MessageParser<Train> _parser = new pb::MessageParser<Train>(() => new Train());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Train> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::TrainData.DescriberWithConsist.Types.Describer.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Train() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Train(Train other) : this() {
              id_ = other.id_;
              describer_ = other.describer_;
              description_ = other.description_;
              opername_ = other.opername_;
              sysname_ = other.sysname_;
              orientedDirection_ = other.orientedDirection_;
              steppingDirection_ = other.steppingDirection_;
              DynamicInfo = other.dynamicInfo_ != null ? other.DynamicInfo.Clone() : null;
              trainProperty_ = other.trainProperty_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Train Clone() {
              return new Train(this);
            }

            /// <summary>Field number for the "id" field.</summary>
            public const int IdFieldNumber = 1;
            private uint id_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Id {
              get { return id_; }
              set {
                id_ = value;
              }
            }

            /// <summary>Field number for the "describer" field.</summary>
            public const int DescriberFieldNumber = 2;
            private string describer_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Describer {
              get { return describer_; }
              set {
                describer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "description" field.</summary>
            public const int DescriptionFieldNumber = 3;
            private string description_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Description {
              get { return description_; }
              set {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "opername" field.</summary>
            public const int OpernameFieldNumber = 4;
            private string opername_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Opername {
              get { return opername_; }
              set {
                opername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "sysname" field.</summary>
            public const int SysnameFieldNumber = 5;
            private string sysname_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Sysname {
              get { return sysname_; }
              set {
                sysname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "oriented_direction" field.</summary>
            public const int OrientedDirectionFieldNumber = 6;
            private global::TrainData.EDirection orientedDirection_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::TrainData.EDirection OrientedDirection {
              get { return orientedDirection_; }
              set {
                orientedDirection_ = value;
              }
            }

            /// <summary>Field number for the "stepping_direction" field.</summary>
            public const int SteppingDirectionFieldNumber = 7;
            private global::TrainData.EDirection steppingDirection_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::TrainData.EDirection SteppingDirection {
              get { return steppingDirection_; }
              set {
                steppingDirection_ = value;
              }
            }

            /// <summary>Field number for the "dynamic_info" field.</summary>
            public const int DynamicInfoFieldNumber = 8;
            private global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo dynamicInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo DynamicInfo {
              get { return dynamicInfo_; }
              set {
                dynamicInfo_ = value;
              }
            }

            /// <summary>Field number for the "train_property" field.</summary>
            public const int TrainPropertyFieldNumber = 9;
            private static readonly pb::FieldCodec<global::TrainData.Property> _repeated_trainProperty_codec
                = pb::FieldCodec.ForMessage(74, global::TrainData.Property.Parser);
            private readonly pbc::RepeatedField<global::TrainData.Property> trainProperty_ = new pbc::RepeatedField<global::TrainData.Property>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::TrainData.Property> TrainProperty {
              get { return trainProperty_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Train);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Train other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Id != other.Id) return false;
              if (Describer != other.Describer) return false;
              if (Description != other.Description) return false;
              if (Opername != other.Opername) return false;
              if (Sysname != other.Sysname) return false;
              if (OrientedDirection != other.OrientedDirection) return false;
              if (SteppingDirection != other.SteppingDirection) return false;
              if (!object.Equals(DynamicInfo, other.DynamicInfo)) return false;
              if(!trainProperty_.Equals(other.trainProperty_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Id != 0) hash ^= Id.GetHashCode();
              if (Describer.Length != 0) hash ^= Describer.GetHashCode();
              if (Description.Length != 0) hash ^= Description.GetHashCode();
              if (Opername.Length != 0) hash ^= Opername.GetHashCode();
              if (Sysname.Length != 0) hash ^= Sysname.GetHashCode();
              if (OrientedDirection != 0) hash ^= OrientedDirection.GetHashCode();
              if (SteppingDirection != 0) hash ^= SteppingDirection.GetHashCode();
              if (dynamicInfo_ != null) hash ^= DynamicInfo.GetHashCode();
              hash ^= trainProperty_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Id != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Id);
              }
              if (Describer.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Describer);
              }
              if (Description.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Description);
              }
              if (Opername.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Opername);
              }
              if (Sysname.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Sysname);
              }
              if (OrientedDirection != 0) {
                output.WriteRawTag(48);
                output.WriteEnum((int) OrientedDirection);
              }
              if (SteppingDirection != 0) {
                output.WriteRawTag(56);
                output.WriteEnum((int) SteppingDirection);
              }
              if (dynamicInfo_ != null) {
                output.WriteRawTag(66);
                output.WriteMessage(DynamicInfo);
              }
              trainProperty_.WriteTo(output, _repeated_trainProperty_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Id != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
              }
              if (Describer.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Describer);
              }
              if (Description.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
              }
              if (Opername.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Opername);
              }
              if (Sysname.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Sysname);
              }
              if (OrientedDirection != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrientedDirection);
              }
              if (SteppingDirection != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SteppingDirection);
              }
              if (dynamicInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicInfo);
              }
              size += trainProperty_.CalculateSize(_repeated_trainProperty_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Train other) {
              if (other == null) {
                return;
              }
              if (other.Id != 0) {
                Id = other.Id;
              }
              if (other.Describer.Length != 0) {
                Describer = other.Describer;
              }
              if (other.Description.Length != 0) {
                Description = other.Description;
              }
              if (other.Opername.Length != 0) {
                Opername = other.Opername;
              }
              if (other.Sysname.Length != 0) {
                Sysname = other.Sysname;
              }
              if (other.OrientedDirection != 0) {
                OrientedDirection = other.OrientedDirection;
              }
              if (other.SteppingDirection != 0) {
                SteppingDirection = other.SteppingDirection;
              }
              if (other.dynamicInfo_ != null) {
                if (dynamicInfo_ == null) {
                  dynamicInfo_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo();
                }
                DynamicInfo.MergeFrom(other.DynamicInfo);
              }
              trainProperty_.Add(other.trainProperty_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Id = input.ReadUInt32();
                    break;
                  }
                  case 18: {
                    Describer = input.ReadString();
                    break;
                  }
                  case 26: {
                    Description = input.ReadString();
                    break;
                  }
                  case 34: {
                    Opername = input.ReadString();
                    break;
                  }
                  case 42: {
                    Sysname = input.ReadString();
                    break;
                  }
                  case 48: {
                    orientedDirection_ = (global::TrainData.EDirection) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    steppingDirection_ = (global::TrainData.EDirection) input.ReadEnum();
                    break;
                  }
                  case 66: {
                    if (dynamicInfo_ == null) {
                      dynamicInfo_ = new global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Types.TrainDynInfo();
                    }
                    input.ReadMessage(dynamicInfo_);
                    break;
                  }
                  case 74: {
                    trainProperty_.AddEntriesFrom(input, _repeated_trainProperty_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Train message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class TrainDynInfo : pb::IMessage<TrainDynInfo> {
                private static readonly pb::MessageParser<TrainDynInfo> _parser = new pb::MessageParser<TrainDynInfo>(() => new TrainDynInfo());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TrainDynInfo> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::TrainData.DescriberWithConsist.Types.Describer.Types.Train.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TrainDynInfo() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TrainDynInfo(TrainDynInfo other) : this() {
                  trainStatus_ = other.trainStatus_;
                  deviation_ = other.deviation_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TrainDynInfo Clone() {
                  return new TrainDynInfo(this);
                }

                /// <summary>Field number for the "train_status" field.</summary>
                public const int TrainStatusFieldNumber = 1;
                private int trainStatus_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int TrainStatus {
                  get { return trainStatus_; }
                  set {
                    trainStatus_ = value;
                  }
                }

                /// <summary>Field number for the "deviation" field.</summary>
                public const int DeviationFieldNumber = 2;
                private int deviation_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int Deviation {
                  get { return deviation_; }
                  set {
                    deviation_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TrainDynInfo);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TrainDynInfo other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (TrainStatus != other.TrainStatus) return false;
                  if (Deviation != other.Deviation) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (TrainStatus != 0) hash ^= TrainStatus.GetHashCode();
                  if (Deviation != 0) hash ^= Deviation.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (TrainStatus != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(TrainStatus);
                  }
                  if (Deviation != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Deviation);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (TrainStatus != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrainStatus);
                  }
                  if (Deviation != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deviation);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TrainDynInfo other) {
                  if (other == null) {
                    return;
                  }
                  if (other.TrainStatus != 0) {
                    TrainStatus = other.TrainStatus;
                  }
                  if (other.Deviation != 0) {
                    Deviation = other.Deviation;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        TrainStatus = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        Deviation = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class ExternalTrain : pb::IMessage<ExternalTrain> {
            private static readonly pb::MessageParser<ExternalTrain> _parser = new pb::MessageParser<ExternalTrain>(() => new ExternalTrain());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ExternalTrain> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::TrainData.DescriberWithConsist.Types.Describer.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExternalTrain() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExternalTrain(ExternalTrain other) : this() {
              guid_ = other.guid_;
              externalTrain_ = other.externalTrain_;
              externalTrainId_ = other.externalTrainId_;
              journeyId_ = other.journeyId_;
              journeyType_ = other.journeyType_;
              journeySeqno_ = other.journeySeqno_;
              userCreated_ = other.userCreated_;
              vehicleId_ = other.vehicleId_;
              destinationId_ = other.destinationId_;
              destination_ = other.destination_;
              externalTrainProperty_ = other.externalTrainProperty_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ExternalTrain Clone() {
              return new ExternalTrain(this);
            }

            /// <summary>Field number for the "guid" field.</summary>
            public const int GuidFieldNumber = 1;
            private string guid_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Guid {
              get { return guid_; }
              set {
                guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "external_train" field.</summary>
            public const int ExternalTrain_FieldNumber = 2;
            private string externalTrain_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ExternalTrain_ {
              get { return externalTrain_; }
              set {
                externalTrain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "external_train_id" field.</summary>
            public const int ExternalTrainIdFieldNumber = 3;
            private uint externalTrainId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint ExternalTrainId {
              get { return externalTrainId_; }
              set {
                externalTrainId_ = value;
              }
            }

            /// <summary>Field number for the "journey_id" field.</summary>
            public const int JourneyIdFieldNumber = 4;
            private uint journeyId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint JourneyId {
              get { return journeyId_; }
              set {
                journeyId_ = value;
              }
            }

            /// <summary>Field number for the "journey_type" field.</summary>
            public const int JourneyTypeFieldNumber = 5;
            private global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain.Types.EJourneyType journeyType_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain.Types.EJourneyType JourneyType {
              get { return journeyType_; }
              set {
                journeyType_ = value;
              }
            }

            /// <summary>Field number for the "journey_seqno" field.</summary>
            public const int JourneySeqnoFieldNumber = 6;
            private int journeySeqno_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int JourneySeqno {
              get { return journeySeqno_; }
              set {
                journeySeqno_ = value;
              }
            }

            /// <summary>Field number for the "user_created" field.</summary>
            public const int UserCreatedFieldNumber = 7;
            private bool userCreated_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool UserCreated {
              get { return userCreated_; }
              set {
                userCreated_ = value;
              }
            }

            /// <summary>Field number for the "vehicle_id" field.</summary>
            public const int VehicleIdFieldNumber = 8;
            private string vehicleId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string VehicleId {
              get { return vehicleId_; }
              set {
                vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "destination_id" field.</summary>
            public const int DestinationIdFieldNumber = 9;
            private uint destinationId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint DestinationId {
              get { return destinationId_; }
              set {
                destinationId_ = value;
              }
            }

            /// <summary>Field number for the "destination" field.</summary>
            public const int DestinationFieldNumber = 10;
            private string destination_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Destination {
              get { return destination_; }
              set {
                destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "external_train_property" field.</summary>
            public const int ExternalTrainPropertyFieldNumber = 11;
            private static readonly pb::FieldCodec<global::TrainData.Property> _repeated_externalTrainProperty_codec
                = pb::FieldCodec.ForMessage(90, global::TrainData.Property.Parser);
            private readonly pbc::RepeatedField<global::TrainData.Property> externalTrainProperty_ = new pbc::RepeatedField<global::TrainData.Property>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::TrainData.Property> ExternalTrainProperty {
              get { return externalTrainProperty_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ExternalTrain);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ExternalTrain other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Guid != other.Guid) return false;
              if (ExternalTrain_ != other.ExternalTrain_) return false;
              if (ExternalTrainId != other.ExternalTrainId) return false;
              if (JourneyId != other.JourneyId) return false;
              if (JourneyType != other.JourneyType) return false;
              if (JourneySeqno != other.JourneySeqno) return false;
              if (UserCreated != other.UserCreated) return false;
              if (VehicleId != other.VehicleId) return false;
              if (DestinationId != other.DestinationId) return false;
              if (Destination != other.Destination) return false;
              if(!externalTrainProperty_.Equals(other.externalTrainProperty_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Guid.Length != 0) hash ^= Guid.GetHashCode();
              if (ExternalTrain_.Length != 0) hash ^= ExternalTrain_.GetHashCode();
              if (ExternalTrainId != 0) hash ^= ExternalTrainId.GetHashCode();
              if (JourneyId != 0) hash ^= JourneyId.GetHashCode();
              if (JourneyType != 0) hash ^= JourneyType.GetHashCode();
              if (JourneySeqno != 0) hash ^= JourneySeqno.GetHashCode();
              if (UserCreated != false) hash ^= UserCreated.GetHashCode();
              if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
              if (DestinationId != 0) hash ^= DestinationId.GetHashCode();
              if (Destination.Length != 0) hash ^= Destination.GetHashCode();
              hash ^= externalTrainProperty_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Guid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Guid);
              }
              if (ExternalTrain_.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(ExternalTrain_);
              }
              if (ExternalTrainId != 0) {
                output.WriteRawTag(24);
                output.WriteUInt32(ExternalTrainId);
              }
              if (JourneyId != 0) {
                output.WriteRawTag(32);
                output.WriteUInt32(JourneyId);
              }
              if (JourneyType != 0) {
                output.WriteRawTag(40);
                output.WriteEnum((int) JourneyType);
              }
              if (JourneySeqno != 0) {
                output.WriteRawTag(48);
                output.WriteInt32(JourneySeqno);
              }
              if (UserCreated != false) {
                output.WriteRawTag(56);
                output.WriteBool(UserCreated);
              }
              if (VehicleId.Length != 0) {
                output.WriteRawTag(66);
                output.WriteString(VehicleId);
              }
              if (DestinationId != 0) {
                output.WriteRawTag(72);
                output.WriteUInt32(DestinationId);
              }
              if (Destination.Length != 0) {
                output.WriteRawTag(82);
                output.WriteString(Destination);
              }
              externalTrainProperty_.WriteTo(output, _repeated_externalTrainProperty_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Guid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
              }
              if (ExternalTrain_.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalTrain_);
              }
              if (ExternalTrainId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExternalTrainId);
              }
              if (JourneyId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JourneyId);
              }
              if (JourneyType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JourneyType);
              }
              if (JourneySeqno != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(JourneySeqno);
              }
              if (UserCreated != false) {
                size += 1 + 1;
              }
              if (VehicleId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
              }
              if (DestinationId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DestinationId);
              }
              if (Destination.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
              }
              size += externalTrainProperty_.CalculateSize(_repeated_externalTrainProperty_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ExternalTrain other) {
              if (other == null) {
                return;
              }
              if (other.Guid.Length != 0) {
                Guid = other.Guid;
              }
              if (other.ExternalTrain_.Length != 0) {
                ExternalTrain_ = other.ExternalTrain_;
              }
              if (other.ExternalTrainId != 0) {
                ExternalTrainId = other.ExternalTrainId;
              }
              if (other.JourneyId != 0) {
                JourneyId = other.JourneyId;
              }
              if (other.JourneyType != 0) {
                JourneyType = other.JourneyType;
              }
              if (other.JourneySeqno != 0) {
                JourneySeqno = other.JourneySeqno;
              }
              if (other.UserCreated != false) {
                UserCreated = other.UserCreated;
              }
              if (other.VehicleId.Length != 0) {
                VehicleId = other.VehicleId;
              }
              if (other.DestinationId != 0) {
                DestinationId = other.DestinationId;
              }
              if (other.Destination.Length != 0) {
                Destination = other.Destination;
              }
              externalTrainProperty_.Add(other.externalTrainProperty_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Guid = input.ReadString();
                    break;
                  }
                  case 18: {
                    ExternalTrain_ = input.ReadString();
                    break;
                  }
                  case 24: {
                    ExternalTrainId = input.ReadUInt32();
                    break;
                  }
                  case 32: {
                    JourneyId = input.ReadUInt32();
                    break;
                  }
                  case 40: {
                    journeyType_ = (global::TrainData.DescriberWithConsist.Types.Describer.Types.ExternalTrain.Types.EJourneyType) input.ReadEnum();
                    break;
                  }
                  case 48: {
                    JourneySeqno = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    UserCreated = input.ReadBool();
                    break;
                  }
                  case 66: {
                    VehicleId = input.ReadString();
                    break;
                  }
                  case 72: {
                    DestinationId = input.ReadUInt32();
                    break;
                  }
                  case 82: {
                    Destination = input.ReadString();
                    break;
                  }
                  case 90: {
                    externalTrainProperty_.AddEntriesFrom(input, _repeated_externalTrainProperty_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ExternalTrain message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum EJourneyType {
                [pbr::OriginalName("UNDEFINED")] Undefined = 0,
                [pbr::OriginalName("COMMERCIAL")] Commercial = 2,
                [pbr::OriginalName("INJECTION")] Injection = 3,
                [pbr::OriginalName("WITHDRAWAL")] Withdrawal = 4,
                [pbr::OriginalName("TRAINING")] Training = 5,
                [pbr::OriginalName("TRIALS")] Trials = 6,
                [pbr::OriginalName("HLP")] Hlp = 7,
                [pbr::OriginalName("WITHOUT_TYPE")] WithoutType = 8,
                [pbr::OriginalName("NON_COMMERCIAL")] NonCommercial = 9,
                [pbr::OriginalName("COMMERCIAL_HEADWAY")] CommercialHeadway = 10,
                [pbr::OriginalName("NON_COMMERCIAL_HEADWAY")] NonCommercialHeadway = 11,
                [pbr::OriginalName("DEGRADED")] Degraded = 12,
                [pbr::OriginalName("OPENING_INJECTION")] OpeningInjection = 13,
                [pbr::OriginalName("OPENING_COMMERCIAL")] OpeningCommercial = 14,
                [pbr::OriginalName("GOING_TO_COMMERCIAL_TIMETABLED")] GoingToCommercialTimetabled = 15,
              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class TrainConsist : pb::IMessage<TrainConsist> {
        private static readonly pb::MessageParser<TrainConsist> _parser = new pb::MessageParser<TrainConsist>(() => new TrainConsist());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TrainConsist> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TrainData.DescriberWithConsist.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainConsist() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainConsist(TrainConsist other) : this() {
          activeVehicleId_ = other.activeVehicleId_;
          vehicle_ = other.vehicle_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainConsist Clone() {
          return new TrainConsist(this);
        }

        /// <summary>Field number for the "active_vehicle_id" field.</summary>
        public const int ActiveVehicleIdFieldNumber = 1;
        private uint activeVehicleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ActiveVehicleId {
          get { return activeVehicleId_; }
          set {
            activeVehicleId_ = value;
          }
        }

        /// <summary>Field number for the "vehicle" field.</summary>
        public const int VehicleFieldNumber = 2;
        private static readonly pb::FieldCodec<global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle> _repeated_vehicle_codec
            = pb::FieldCodec.ForMessage(18, global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle.Parser);
        private readonly pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle> vehicle_ = new pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainConsist.Types.Vehicle> Vehicle {
          get { return vehicle_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TrainConsist);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TrainConsist other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ActiveVehicleId != other.ActiveVehicleId) return false;
          if(!vehicle_.Equals(other.vehicle_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ActiveVehicleId != 0) hash ^= ActiveVehicleId.GetHashCode();
          hash ^= vehicle_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ActiveVehicleId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(ActiveVehicleId);
          }
          vehicle_.WriteTo(output, _repeated_vehicle_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ActiveVehicleId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveVehicleId);
          }
          size += vehicle_.CalculateSize(_repeated_vehicle_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TrainConsist other) {
          if (other == null) {
            return;
          }
          if (other.ActiveVehicleId != 0) {
            ActiveVehicleId = other.ActiveVehicleId;
          }
          vehicle_.Add(other.vehicle_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ActiveVehicleId = input.ReadUInt32();
                break;
              }
              case 18: {
                vehicle_.AddEntriesFrom(input, _repeated_vehicle_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the TrainConsist message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Vehicle : pb::IMessage<Vehicle> {
            private static readonly pb::MessageParser<Vehicle> _parser = new pb::MessageParser<Vehicle>(() => new Vehicle());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Vehicle> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::TrainData.DescriberWithConsist.Types.TrainConsist.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vehicle() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vehicle(Vehicle other) : this() {
              vehicleId_ = other.vehicleId_;
              vehicleName_ = other.vehicleName_;
              vehicleProperty_ = other.vehicleProperty_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vehicle Clone() {
              return new Vehicle(this);
            }

            /// <summary>Field number for the "vehicle_id" field.</summary>
            public const int VehicleIdFieldNumber = 1;
            private uint vehicleId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint VehicleId {
              get { return vehicleId_; }
              set {
                vehicleId_ = value;
              }
            }

            /// <summary>Field number for the "vehicle_name" field.</summary>
            public const int VehicleNameFieldNumber = 2;
            private string vehicleName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string VehicleName {
              get { return vehicleName_; }
              set {
                vehicleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "vehicle_property" field.</summary>
            public const int VehiclePropertyFieldNumber = 3;
            private static readonly pb::FieldCodec<global::TrainData.Property> _repeated_vehicleProperty_codec
                = pb::FieldCodec.ForMessage(26, global::TrainData.Property.Parser);
            private readonly pbc::RepeatedField<global::TrainData.Property> vehicleProperty_ = new pbc::RepeatedField<global::TrainData.Property>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::TrainData.Property> VehicleProperty {
              get { return vehicleProperty_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Vehicle);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Vehicle other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (VehicleId != other.VehicleId) return false;
              if (VehicleName != other.VehicleName) return false;
              if(!vehicleProperty_.Equals(other.vehicleProperty_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (VehicleId != 0) hash ^= VehicleId.GetHashCode();
              if (VehicleName.Length != 0) hash ^= VehicleName.GetHashCode();
              hash ^= vehicleProperty_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (VehicleId != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(VehicleId);
              }
              if (VehicleName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(VehicleName);
              }
              vehicleProperty_.WriteTo(output, _repeated_vehicleProperty_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (VehicleId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VehicleId);
              }
              if (VehicleName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleName);
              }
              size += vehicleProperty_.CalculateSize(_repeated_vehicleProperty_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Vehicle other) {
              if (other == null) {
                return;
              }
              if (other.VehicleId != 0) {
                VehicleId = other.VehicleId;
              }
              if (other.VehicleName.Length != 0) {
                VehicleName = other.VehicleName;
              }
              vehicleProperty_.Add(other.vehicleProperty_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    VehicleId = input.ReadUInt32();
                    break;
                  }
                  case 18: {
                    VehicleName = input.ReadString();
                    break;
                  }
                  case 26: {
                    vehicleProperty_.AddEntriesFrom(input, _repeated_vehicleProperty_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class TrainDynamicTimingInfo : pb::IMessage<TrainDynamicTimingInfo> {
        private static readonly pb::MessageParser<TrainDynamicTimingInfo> _parser = new pb::MessageParser<TrainDynamicTimingInfo>(() => new TrainDynamicTimingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TrainDynamicTimingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TrainData.DescriberWithConsist.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainDynamicTimingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainDynamicTimingInfo(TrainDynamicTimingInfo other) : this() {
          movementState_ = other.movementState_;
          NextStationInfo = other.nextStationInfo_ != null ? other.NextStationInfo.Clone() : null;
          lastStationInfo_ = other.lastStationInfo_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TrainDynamicTimingInfo Clone() {
          return new TrainDynamicTimingInfo(this);
        }

        /// <summary>Field number for the "movement_state" field.</summary>
        public const int MovementStateFieldNumber = 1;
        private global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.ETrainMovementState movementState_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.ETrainMovementState MovementState {
          get { return movementState_; }
          set {
            movementState_ = value;
          }
        }

        /// <summary>Field number for the "next_station_info" field.</summary>
        public const int NextStationInfoFieldNumber = 2;
        private global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo nextStationInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo NextStationInfo {
          get { return nextStationInfo_; }
          set {
            nextStationInfo_ = value;
          }
        }

        /// <summary>Field number for the "last_station_info" field.</summary>
        public const int LastStationInfoFieldNumber = 3;
        private static readonly pb::FieldCodec<global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo> _repeated_lastStationInfo_codec
            = pb::FieldCodec.ForMessage(26, global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Parser);
        private readonly pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo> lastStationInfo_ = new pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo> LastStationInfo {
          get { return lastStationInfo_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TrainDynamicTimingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TrainDynamicTimingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MovementState != other.MovementState) return false;
          if (!object.Equals(NextStationInfo, other.NextStationInfo)) return false;
          if(!lastStationInfo_.Equals(other.lastStationInfo_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MovementState != 0) hash ^= MovementState.GetHashCode();
          if (nextStationInfo_ != null) hash ^= NextStationInfo.GetHashCode();
          hash ^= lastStationInfo_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MovementState != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) MovementState);
          }
          if (nextStationInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(NextStationInfo);
          }
          lastStationInfo_.WriteTo(output, _repeated_lastStationInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MovementState != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MovementState);
          }
          if (nextStationInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextStationInfo);
          }
          size += lastStationInfo_.CalculateSize(_repeated_lastStationInfo_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TrainDynamicTimingInfo other) {
          if (other == null) {
            return;
          }
          if (other.MovementState != 0) {
            MovementState = other.MovementState;
          }
          if (other.nextStationInfo_ != null) {
            if (nextStationInfo_ == null) {
              nextStationInfo_ = new global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo();
            }
            NextStationInfo.MergeFrom(other.NextStationInfo);
          }
          lastStationInfo_.Add(other.lastStationInfo_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                movementState_ = (global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.ETrainMovementState) input.ReadEnum();
                break;
              }
              case 18: {
                if (nextStationInfo_ == null) {
                  nextStationInfo_ = new global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo();
                }
                input.ReadMessage(nextStationInfo_);
                break;
              }
              case 26: {
                lastStationInfo_.AddEntriesFrom(input, _repeated_lastStationInfo_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the TrainDynamicTimingInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum ETrainMovementState {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("MOVING")] Moving = 1,
            [pbr::OriginalName("STOPPED_AT_STATION")] StoppedAtStation = 2,
            [pbr::OriginalName("STOPPED_ON_LINE_DUE_TO_SIGNALLING")] StoppedOnLineDueToSignalling = 3,
            [pbr::OriginalName("STOPPED_ON_LINE_DUE_TO_OTHER_REASON_THAN_SIGNALLING")] StoppedOnLineDueToOtherReasonThanSignalling = 4,
          }

          public sealed partial class TrainDynamicStationInfo : pb::IMessage<TrainDynamicStationInfo> {
            private static readonly pb::MessageParser<TrainDynamicStationInfo> _parser = new pb::MessageParser<TrainDynamicStationInfo>(() => new TrainDynamicStationInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TrainDynamicStationInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TrainDynamicStationInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TrainDynamicStationInfo(TrainDynamicStationInfo other) : this() {
              stationId_ = other.stationId_;
              platformId_ = other.platformId_;
              trafficEvent_ = other.trafficEvent_;
              plannedTime_ = other.plannedTime_;
              scheduleId_ = other.scheduleId_;
              nextScheduleId_ = other.nextScheduleId_;
              occurredTime_ = other.occurredTime_;
              regulatedTime_ = other.regulatedTime_;
              nextPlannedDepartureTimeToComplyWith_ = other.nextPlannedDepartureTimeToComplyWith_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TrainDynamicStationInfo Clone() {
              return new TrainDynamicStationInfo(this);
            }

            /// <summary>Field number for the "station_id" field.</summary>
            public const int StationIdFieldNumber = 1;
            private uint stationId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint StationId {
              get { return stationId_; }
              set {
                stationId_ = value;
              }
            }

            /// <summary>Field number for the "platform_id" field.</summary>
            public const int PlatformIdFieldNumber = 2;
            private uint platformId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint PlatformId {
              get { return platformId_; }
              set {
                platformId_ = value;
              }
            }

            /// <summary>Field number for the "traffic_event" field.</summary>
            public const int TrafficEventFieldNumber = 3;
            private global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Types.ETrafficEvent trafficEvent_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Types.ETrafficEvent TrafficEvent {
              get { return trafficEvent_; }
              set {
                trafficEvent_ = value;
              }
            }

            /// <summary>Field number for the "planned_time" field.</summary>
            public const int PlannedTimeFieldNumber = 4;
            private ulong plannedTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong PlannedTime {
              get { return plannedTime_; }
              set {
                plannedTime_ = value;
              }
            }

            /// <summary>Field number for the "schedule_id" field.</summary>
            public const int ScheduleIdFieldNumber = 5;
            private uint scheduleId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint ScheduleId {
              get { return scheduleId_; }
              set {
                scheduleId_ = value;
              }
            }

            /// <summary>Field number for the "next_schedule_id" field.</summary>
            public const int NextScheduleIdFieldNumber = 6;
            private uint nextScheduleId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint NextScheduleId {
              get { return nextScheduleId_; }
              set {
                nextScheduleId_ = value;
              }
            }

            /// <summary>Field number for the "occurred_time" field.</summary>
            public const int OccurredTimeFieldNumber = 7;
            private ulong occurredTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong OccurredTime {
              get { return occurredTime_; }
              set {
                occurredTime_ = value;
              }
            }

            /// <summary>Field number for the "regulated_time" field.</summary>
            public const int RegulatedTimeFieldNumber = 8;
            private ulong regulatedTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong RegulatedTime {
              get { return regulatedTime_; }
              set {
                regulatedTime_ = value;
              }
            }

            /// <summary>Field number for the "next_planned_departure_time_to_comply_with" field.</summary>
            public const int NextPlannedDepartureTimeToComplyWithFieldNumber = 9;
            private ulong nextPlannedDepartureTimeToComplyWith_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong NextPlannedDepartureTimeToComplyWith {
              get { return nextPlannedDepartureTimeToComplyWith_; }
              set {
                nextPlannedDepartureTimeToComplyWith_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TrainDynamicStationInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TrainDynamicStationInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (StationId != other.StationId) return false;
              if (PlatformId != other.PlatformId) return false;
              if (TrafficEvent != other.TrafficEvent) return false;
              if (PlannedTime != other.PlannedTime) return false;
              if (ScheduleId != other.ScheduleId) return false;
              if (NextScheduleId != other.NextScheduleId) return false;
              if (OccurredTime != other.OccurredTime) return false;
              if (RegulatedTime != other.RegulatedTime) return false;
              if (NextPlannedDepartureTimeToComplyWith != other.NextPlannedDepartureTimeToComplyWith) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (StationId != 0) hash ^= StationId.GetHashCode();
              if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
              if (TrafficEvent != 0) hash ^= TrafficEvent.GetHashCode();
              if (PlannedTime != 0UL) hash ^= PlannedTime.GetHashCode();
              if (ScheduleId != 0) hash ^= ScheduleId.GetHashCode();
              if (NextScheduleId != 0) hash ^= NextScheduleId.GetHashCode();
              if (OccurredTime != 0UL) hash ^= OccurredTime.GetHashCode();
              if (RegulatedTime != 0UL) hash ^= RegulatedTime.GetHashCode();
              if (NextPlannedDepartureTimeToComplyWith != 0UL) hash ^= NextPlannedDepartureTimeToComplyWith.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (StationId != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(StationId);
              }
              if (PlatformId != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(PlatformId);
              }
              if (TrafficEvent != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) TrafficEvent);
              }
              if (PlannedTime != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(PlannedTime);
              }
              if (ScheduleId != 0) {
                output.WriteRawTag(40);
                output.WriteUInt32(ScheduleId);
              }
              if (NextScheduleId != 0) {
                output.WriteRawTag(48);
                output.WriteUInt32(NextScheduleId);
              }
              if (OccurredTime != 0UL) {
                output.WriteRawTag(56);
                output.WriteUInt64(OccurredTime);
              }
              if (RegulatedTime != 0UL) {
                output.WriteRawTag(64);
                output.WriteUInt64(RegulatedTime);
              }
              if (NextPlannedDepartureTimeToComplyWith != 0UL) {
                output.WriteRawTag(72);
                output.WriteUInt64(NextPlannedDepartureTimeToComplyWith);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (StationId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StationId);
              }
              if (PlatformId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformId);
              }
              if (TrafficEvent != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrafficEvent);
              }
              if (PlannedTime != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlannedTime);
              }
              if (ScheduleId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScheduleId);
              }
              if (NextScheduleId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextScheduleId);
              }
              if (OccurredTime != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OccurredTime);
              }
              if (RegulatedTime != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RegulatedTime);
              }
              if (NextPlannedDepartureTimeToComplyWith != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NextPlannedDepartureTimeToComplyWith);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TrainDynamicStationInfo other) {
              if (other == null) {
                return;
              }
              if (other.StationId != 0) {
                StationId = other.StationId;
              }
              if (other.PlatformId != 0) {
                PlatformId = other.PlatformId;
              }
              if (other.TrafficEvent != 0) {
                TrafficEvent = other.TrafficEvent;
              }
              if (other.PlannedTime != 0UL) {
                PlannedTime = other.PlannedTime;
              }
              if (other.ScheduleId != 0) {
                ScheduleId = other.ScheduleId;
              }
              if (other.NextScheduleId != 0) {
                NextScheduleId = other.NextScheduleId;
              }
              if (other.OccurredTime != 0UL) {
                OccurredTime = other.OccurredTime;
              }
              if (other.RegulatedTime != 0UL) {
                RegulatedTime = other.RegulatedTime;
              }
              if (other.NextPlannedDepartureTimeToComplyWith != 0UL) {
                NextPlannedDepartureTimeToComplyWith = other.NextPlannedDepartureTimeToComplyWith;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    StationId = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    PlatformId = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    trafficEvent_ = (global::TrainData.DescriberWithConsist.Types.TrainDynamicTimingInfo.Types.TrainDynamicStationInfo.Types.ETrafficEvent) input.ReadEnum();
                    break;
                  }
                  case 32: {
                    PlannedTime = input.ReadUInt64();
                    break;
                  }
                  case 40: {
                    ScheduleId = input.ReadUInt32();
                    break;
                  }
                  case 48: {
                    NextScheduleId = input.ReadUInt32();
                    break;
                  }
                  case 56: {
                    OccurredTime = input.ReadUInt64();
                    break;
                  }
                  case 64: {
                    RegulatedTime = input.ReadUInt64();
                    break;
                  }
                  case 72: {
                    NextPlannedDepartureTimeToComplyWith = input.ReadUInt64();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the TrainDynamicStationInfo message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum ETrafficEvent {
                [pbr::OriginalName("UNDEFINED")] Undefined = 0,
                [pbr::OriginalName("ARRIVAL")] Arrival = 1,
                [pbr::OriginalName("DEPARTURE")] Departure = 2,
              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class DescriberWithConsistList : pb::IMessage<DescriberWithConsistList> {
    private static readonly pb::MessageParser<DescriberWithConsistList> _parser = new pb::MessageParser<DescriberWithConsistList>(() => new DescriberWithConsistList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescriberWithConsistList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsistList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsistList(DescriberWithConsistList other) : this() {
      updateMode_ = other.updateMode_;
      describer_ = other.describer_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriberWithConsistList Clone() {
      return new DescriberWithConsistList(this);
    }

    /// <summary>Field number for the "update_mode" field.</summary>
    public const int UpdateModeFieldNumber = 1;
    private global::TrainData.EUpdateMode updateMode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.EUpdateMode UpdateMode {
      get { return updateMode_; }
      set {
        updateMode_ = value;
      }
    }

    /// <summary>Field number for the "describer" field.</summary>
    public const int DescriberFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TrainData.DescriberWithConsist> _repeated_describer_codec
        = pb::FieldCodec.ForMessage(18, global::TrainData.DescriberWithConsist.Parser);
    private readonly pbc::RepeatedField<global::TrainData.DescriberWithConsist> describer_ = new pbc::RepeatedField<global::TrainData.DescriberWithConsist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TrainData.DescriberWithConsist> Describer {
      get { return describer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescriberWithConsistList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescriberWithConsistList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpdateMode != other.UpdateMode) return false;
      if(!describer_.Equals(other.describer_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UpdateMode != 0) hash ^= UpdateMode.GetHashCode();
      hash ^= describer_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UpdateMode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) UpdateMode);
      }
      describer_.WriteTo(output, _repeated_describer_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UpdateMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UpdateMode);
      }
      size += describer_.CalculateSize(_repeated_describer_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescriberWithConsistList other) {
      if (other == null) {
        return;
      }
      if (other.UpdateMode != 0) {
        UpdateMode = other.UpdateMode;
      }
      describer_.Add(other.describer_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            updateMode_ = (global::TrainData.EUpdateMode) input.ReadEnum();
            break;
          }
          case 18: {
            describer_.AddEntriesFrom(input, _repeated_describer_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrainMovement : pb::IMessage<TrainMovement> {
    private static readonly pb::MessageParser<TrainMovement> _parser = new pb::MessageParser<TrainMovement>(() => new TrainMovement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainMovement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainMovement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainMovement(TrainMovement other) : this() {
      id_ = other.id_;
      direction_ = other.direction_;
      occurredTime_ = other.occurredTime_;
      Position = other.position_ != null ? other.Position.Clone() : null;
      MovementController = other.movementController_ != null ? other.MovementController.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainMovement Clone() {
      return new TrainMovement(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::TrainData.EDirection direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.EDirection Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "occurred_time" field.</summary>
    public const int OccurredTimeFieldNumber = 3;
    private ulong occurredTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OccurredTime {
      get { return occurredTime_; }
      set {
        occurredTime_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::TrainData.TrainPosition position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.TrainPosition Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "movement_controller" field.</summary>
    public const int MovementControllerFieldNumber = 5;
    private global::TrainData.MovementController movementController_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.MovementController MovementController {
      get { return movementController_; }
      set {
        movementController_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainMovement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainMovement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Direction != other.Direction) return false;
      if (OccurredTime != other.OccurredTime) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(MovementController, other.MovementController)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (OccurredTime != 0UL) hash ^= OccurredTime.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (movementController_ != null) hash ^= MovementController.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (OccurredTime != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(OccurredTime);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (movementController_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MovementController);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (OccurredTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OccurredTime);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (movementController_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MovementController);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainMovement other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.OccurredTime != 0UL) {
        OccurredTime = other.OccurredTime;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::TrainData.TrainPosition();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.movementController_ != null) {
        if (movementController_ == null) {
          movementController_ = new global::TrainData.MovementController();
        }
        MovementController.MergeFrom(other.MovementController);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            direction_ = (global::TrainData.EDirection) input.ReadEnum();
            break;
          }
          case 24: {
            OccurredTime = input.ReadUInt64();
            break;
          }
          case 34: {
            if (position_ == null) {
              position_ = new global::TrainData.TrainPosition();
            }
            input.ReadMessage(position_);
            break;
          }
          case 42: {
            if (movementController_ == null) {
              movementController_ = new global::TrainData.MovementController();
            }
            input.ReadMessage(movementController_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrainIdentity : pb::IMessage<TrainIdentity> {
    private static readonly pb::MessageParser<TrainIdentity> _parser = new pb::MessageParser<TrainIdentity>(() => new TrainIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainIdentity(TrainIdentity other) : this() {
      sysid_ = other.sysid_;
      guid_ = other.guid_;
      describer_ = other.describer_;
      externalIdentity_ = other.externalIdentity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainIdentity Clone() {
      return new TrainIdentity(this);
    }

    /// <summary>Field number for the "sysid" field.</summary>
    public const int SysidFieldNumber = 1;
    private uint sysid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Sysid {
      get { return sysid_; }
      set {
        sysid_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 2;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "describer" field.</summary>
    public const int DescriberFieldNumber = 3;
    private string describer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Describer {
      get { return describer_; }
      set {
        describer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "external_identity" field.</summary>
    public const int ExternalIdentityFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TrainData.TrainIdentity.Types.ExternalIdentity> _repeated_externalIdentity_codec
        = pb::FieldCodec.ForMessage(34, global::TrainData.TrainIdentity.Types.ExternalIdentity.Parser);
    private readonly pbc::RepeatedField<global::TrainData.TrainIdentity.Types.ExternalIdentity> externalIdentity_ = new pbc::RepeatedField<global::TrainData.TrainIdentity.Types.ExternalIdentity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TrainData.TrainIdentity.Types.ExternalIdentity> ExternalIdentity {
      get { return externalIdentity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sysid != other.Sysid) return false;
      if (Guid != other.Guid) return false;
      if (Describer != other.Describer) return false;
      if(!externalIdentity_.Equals(other.externalIdentity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sysid != 0) hash ^= Sysid.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (Describer.Length != 0) hash ^= Describer.GetHashCode();
      hash ^= externalIdentity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sysid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Sysid);
      }
      if (Guid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Guid);
      }
      if (Describer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Describer);
      }
      externalIdentity_.WriteTo(output, _repeated_externalIdentity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sysid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sysid);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (Describer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Describer);
      }
      size += externalIdentity_.CalculateSize(_repeated_externalIdentity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainIdentity other) {
      if (other == null) {
        return;
      }
      if (other.Sysid != 0) {
        Sysid = other.Sysid;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.Describer.Length != 0) {
        Describer = other.Describer;
      }
      externalIdentity_.Add(other.externalIdentity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sysid = input.ReadUInt32();
            break;
          }
          case 18: {
            Guid = input.ReadString();
            break;
          }
          case 26: {
            Describer = input.ReadString();
            break;
          }
          case 34: {
            externalIdentity_.AddEntriesFrom(input, _repeated_externalIdentity_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrainIdentity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ExternalIdentity : pb::IMessage<ExternalIdentity> {
        private static readonly pb::MessageParser<ExternalIdentity> _parser = new pb::MessageParser<ExternalIdentity>(() => new ExternalIdentity());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExternalIdentity> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TrainData.TrainIdentity.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalIdentity() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalIdentity(ExternalIdentity other) : this() {
          externalSystem_ = other.externalSystem_;
          identity_ = other.identity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalIdentity Clone() {
          return new ExternalIdentity(this);
        }

        /// <summary>Field number for the "external_system" field.</summary>
        public const int ExternalSystemFieldNumber = 1;
        private string externalSystem_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExternalSystem {
          get { return externalSystem_; }
          set {
            externalSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "identity" field.</summary>
        public const int IdentityFieldNumber = 2;
        private string identity_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Identity {
          get { return identity_; }
          set {
            identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExternalIdentity);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExternalIdentity other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExternalSystem != other.ExternalSystem) return false;
          if (Identity != other.Identity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExternalSystem.Length != 0) hash ^= ExternalSystem.GetHashCode();
          if (Identity.Length != 0) hash ^= Identity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ExternalSystem.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExternalSystem);
          }
          if (Identity.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Identity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExternalSystem.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalSystem);
          }
          if (Identity.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExternalIdentity other) {
          if (other == null) {
            return;
          }
          if (other.ExternalSystem.Length != 0) {
            ExternalSystem = other.ExternalSystem;
          }
          if (other.Identity.Length != 0) {
            Identity = other.Identity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ExternalSystem = input.ReadString();
                break;
              }
              case 18: {
                Identity = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TrainCommandStarting : pb::IMessage<TrainCommandStarting> {
    private static readonly pb::MessageParser<TrainCommandStarting> _parser = new pb::MessageParser<TrainCommandStarting>(() => new TrainCommandStarting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainCommandStarting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandStarting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandStarting(TrainCommandStarting other) : this() {
      transactionId_ = other.transactionId_;
      trainCommand_ = other.trainCommand_;
      trainIdentity_ = other.trainIdentity_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandStarting Clone() {
      return new TrainCommandStarting(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private uint transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "train_command" field.</summary>
    public const int TrainCommandFieldNumber = 2;
    private global::TrainData.ETrainCommand trainCommand_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.ETrainCommand TrainCommand {
      get { return trainCommand_; }
      set {
        trainCommand_ = value;
      }
    }

    /// <summary>Field number for the "train_identity" field.</summary>
    public const int TrainIdentityFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TrainData.TrainIdentity> _repeated_trainIdentity_codec
        = pb::FieldCodec.ForMessage(26, global::TrainData.TrainIdentity.Parser);
    private readonly pbc::RepeatedField<global::TrainData.TrainIdentity> trainIdentity_ = new pbc::RepeatedField<global::TrainData.TrainIdentity>();
    /// <summary>
    /// 0 to 2 train identities, depending on command (0 for SET, 2 for EXCHANGE and JOIN)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TrainData.TrainIdentity> TrainIdentity {
      get { return trainIdentity_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainCommandStarting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainCommandStarting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (TrainCommand != other.TrainCommand) return false;
      if(!trainIdentity_.Equals(other.trainIdentity_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId != 0) hash ^= TransactionId.GetHashCode();
      if (TrainCommand != 0) hash ^= TrainCommand.GetHashCode();
      hash ^= trainIdentity_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TransactionId);
      }
      if (TrainCommand != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrainCommand);
      }
      trainIdentity_.WriteTo(output, _repeated_trainIdentity_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransactionId);
      }
      if (TrainCommand != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrainCommand);
      }
      size += trainIdentity_.CalculateSize(_repeated_trainIdentity_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainCommandStarting other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.TrainCommand != 0) {
        TrainCommand = other.TrainCommand;
      }
      trainIdentity_.Add(other.trainIdentity_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransactionId = input.ReadUInt32();
            break;
          }
          case 16: {
            trainCommand_ = (global::TrainData.ETrainCommand) input.ReadEnum();
            break;
          }
          case 26: {
            trainIdentity_.AddEntriesFrom(input, _repeated_trainIdentity_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrainCommandEnded : pb::IMessage<TrainCommandEnded> {
    private static readonly pb::MessageParser<TrainCommandEnded> _parser = new pb::MessageParser<TrainCommandEnded>(() => new TrainCommandEnded());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainCommandEnded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrainData.TrainDataMessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandEnded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandEnded(TrainCommandEnded other) : this() {
      transactionId_ = other.transactionId_;
      trainCommand_ = other.trainCommand_;
      trainIdentity_ = other.trainIdentity_.Clone();
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCommandEnded Clone() {
      return new TrainCommandEnded(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private uint transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "train_command" field.</summary>
    public const int TrainCommandFieldNumber = 2;
    private global::TrainData.ETrainCommand trainCommand_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.ETrainCommand TrainCommand {
      get { return trainCommand_; }
      set {
        trainCommand_ = value;
      }
    }

    /// <summary>Field number for the "train_identity" field.</summary>
    public const int TrainIdentityFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TrainData.TrainIdentity> _repeated_trainIdentity_codec
        = pb::FieldCodec.ForMessage(26, global::TrainData.TrainIdentity.Parser);
    private readonly pbc::RepeatedField<global::TrainData.TrainIdentity> trainIdentity_ = new pbc::RepeatedField<global::TrainData.TrainIdentity>();
    /// <summary>
    /// 0 to 2 train identities, depending on command (0 for FAIL and REMOVE, 2 for EXCHANGE and SPLIT)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TrainData.TrainIdentity> TrainIdentity {
      get { return trainIdentity_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::TrainData.TrainCommandEnded.Types.ETrainCommandStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrainData.TrainCommandEnded.Types.ETrainCommandStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainCommandEnded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainCommandEnded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (TrainCommand != other.TrainCommand) return false;
      if(!trainIdentity_.Equals(other.trainIdentity_)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId != 0) hash ^= TransactionId.GetHashCode();
      if (TrainCommand != 0) hash ^= TrainCommand.GetHashCode();
      hash ^= trainIdentity_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TransactionId);
      }
      if (TrainCommand != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrainCommand);
      }
      trainIdentity_.WriteTo(output, _repeated_trainIdentity_codec);
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransactionId);
      }
      if (TrainCommand != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrainCommand);
      }
      size += trainIdentity_.CalculateSize(_repeated_trainIdentity_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainCommandEnded other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.TrainCommand != 0) {
        TrainCommand = other.TrainCommand;
      }
      trainIdentity_.Add(other.trainIdentity_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransactionId = input.ReadUInt32();
            break;
          }
          case 16: {
            trainCommand_ = (global::TrainData.ETrainCommand) input.ReadEnum();
            break;
          }
          case 26: {
            trainIdentity_.AddEntriesFrom(input, _repeated_trainIdentity_codec);
            break;
          }
          case 32: {
            status_ = (global::TrainData.TrainCommandEnded.Types.ETrainCommandStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrainCommandEnded message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ETrainCommandStatus {
        [pbr::OriginalName("FAIL")] Fail = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
